##
##	Pez syntax examples for all structures. Anything not commented out is valid pez code.
##

##
##	Todo for future: 
##		Fix InOrderWrite for parenthesis expressions. Move InOrderWrite to BaseTranslate if possible.
##		Enforce the first loop and WriteState in the BaseTranslate. Clean up BaseTranslate of any unnecessary code.
##		Fix any issues related to parenthesis expression parsing.
##

#	Entry point of pez:
#	Write func main and indent once to compile into something runnable in C or other languages. Pez will detect this function and grant an equivalent in other languages.
#	Note: Some languages may require their main function to return something or accept parameters. More on that later when working on languages outside of C.

func main
	a = 1
	b = 2
	c = b + a


#	This is a comment in pez.

#	Scope is delimited by tabs. In other words, the body of an if statement is the number of tabs + 1. The body will end when it has the same number of tabs as the if statement line.

#	If statements -> if condition

if x == y
	x + 1

#	If statements may also have an else statement. The else must share a scope with it's paired if statement.

if x == y
	x + 1
else
	x + 2

#	lpw keyword is the pez while loop -> lpw condition

lpw x == y
	x + 1

#	lpf keyword is the pez for loop -> lpf x :: y 
#	Where X and Y are both integers. (Variables for X and Y are not yet implemented as of 4/9/2020).
#	This loop is 1 based in pez. (Becomes zero based during C translation). 

lpf 1 :: 10
	x + 1

#	Variable definitions -> x = y
#	Where y is an integer or a variable. (Other types yet to be implemented).

x = 10

#	Function definitions -> func funcName a b c d e f g
#	Where:
#		Keyword: func
#		Function Name: funcName
#		Parameters: a b c d e f g
#	Below is a void function with no parameters.

func HelloWorld
	x = 9001